---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logseer
  labels:
    app: logseer
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: "logseer"
  template:
    metadata:
      creationTimestamp:
      labels:
        app: "logseer"
        component: logseer
        module: logseer
        version: v1.0
    spec:
      volumes:
        - emptyDir: {}
          name: log
        - configMap:
            name: "logseer-config"
          name: "config-volume"
        - hostPath:
            path: /etc/localtime
          name: localtime
      containers:
        - name: "tomcat"
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          resources:
            limits:
              cpu: "{{ .Values.logseer.resources.limits.cpu }}"
              memory: "{{ .Values.logseer.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.logseer.resources.requests.cpu }}"
              memory: "{{ .Values.logseer.resources.requests.memory }}"
          volumeMounts:
            - name: "log"
              mountPath: "/usr/local/tomcat/logs"
            - mountPath: "/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/system.properties"
              name: "config-volume"
              subPath: "system.properties"
            - mountPath: /etc/localtime
              name: localtime
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: "File"
          imagePullPolicy: "IfNotPresent"
      restartPolicy: "Always"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: "In"
                values:
                - "logseer"
            topologyKey: "kubernetes.io/hostname"
