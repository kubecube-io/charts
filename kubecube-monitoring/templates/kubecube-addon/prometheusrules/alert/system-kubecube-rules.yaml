#组件告警kubecube模块告警指标
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubecube-monitoring-system-kubecube.rules
  namespace: kubecube-monitoring
spec:
  groups:
    - name: pod.rules
      rules:
        - record: pod:cpu_usage_percentage
          expr: label_join(100 * irate(container_cpu_usage_seconds_total{container="",namespace!~"kube-system|default|kube-public",pod!=""}[5m]), "target", ".", "namespace", "pod")
          labels:
            cnName: CPU使用率
            unit: "%"
        - record: pod:memory_usage_percentage
          expr: label_join((100 * container_memory_working_set_bytes{container="",namespace!~"kube-system|default|kube-public",pod!=""} / (container_spec_memory_limit_bytes > 0)) or (100 * container_memory_working_set_bytes{container="",namespace!~"kube-system|default|kube-public",pod!=""} / ignoring(container_name, id, image, instance, job, name, namespace, pod) group_left() node_memory_MemTotal_bytes), "target", ".", "namespace", "pod")
          labels:
            cnName: 内存使用率
            unit: "%"
        - record: pod:disk_read_operation_rate
          expr: label_join(sum by(cluster, container_name, namespace, pod, device) (irate(container_fs_reads_total{container="",device!="",namespace!~"kube-system|default|kube-public",pod!=""}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 磁盘读操作速率
            unit: "MIB/s"
        - record: pod:disk_write_operation_rate
          expr: label_join(sum by(cluster, container, namespace, pod, device) (irate(container_fs_writes_total{container="",device!="",namespace!~"kube-system|default|kube-public",pod!=""}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 磁盘写操作速率
            unit: "MIB/s"
        - record: pod:disk_read_bytes_rate
          expr: label_join(sum by(cluster, container_name, namespace, pod, device) (irate(container_fs_reads_bytes_total{container="",device!="",namespace!~"kube-system|default|kube-public",pod!=""}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 磁盘读字节速率
            unit: "MiB/s"
        - record: pod:disk_write_bytes_rate
          expr: label_join(sum by(cluster, container_name, namespace, pod, device) (irate(container_fs_writes_bytes_total{container="",device!="",namespace!~"kube-system|default|kube-public",pod!=""}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 磁盘写字节速率
            unit: "MiB/s"
        - record: pod:network_receive_packets_rate
          expr: label_join(sum by(cluster, namespace, pod, interface) (irate(container_network_receive_packets_total{container="POD",interface!~"bond.*|tunl.*|lo.*|cali.*",namespace!~"kube-system|default|kube-public"}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 网络收包速率
            unit: "%"
        - record: pod:network_transmit_packets_rate
          expr: label_join(sum by(cluster, namespace, pod, interface) (irate(container_network_transmit_packets_total{container="POD",interface!~"bond.*|tunl.*|lo.*|cali.*",namespace!~"kube-system|default|kube-public"}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 网络发包速率
            unit: "%"
        - record: pod:network_receive_bytes_rate
          expr: label_join(sum by(cluster, namespace, pod, interface) (irate(container_network_receive_bytes_total{container="POD",interface!~"bond.*|tunl.*|lo.*|cali.*",namespace!~"kube-system|default|kube-public"}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 网络收字节速率
            unit: "MIB/s"
        - record: pod:network_transmit_bytes_rate
          expr: label_join(sum by(cluster, namespace, pod, interface) (irate(container_network_transmit_bytes_total{container="POD",interface!~"bond.*|tunl.*|lo.*|cali.*",namespace!~"kube-system|default|kube-public"}[5m])), "target", ".", "namespace", "pod")
          labels:
            cnName: 网络发字节速率
            unit: "MIB/s"
        - record: pod:gpu_mem_usage_percentage
          expr: label_join(sum by (cluster, namespace, pod) (container:gpu_fb_usage_percentage), "target", ".", "namespace", "pod")
          labels:
            cnName: GPU显存使用率
            unit: "%"
    - name: container.rules
      rules:
        - record: container:cpu_usage_percentage
          expr: label_join(100 * irate(container_cpu_usage_seconds_total{container!~"|POD",namespace!~"kube-system|default|kube-public"}[5m]), "target", ".", "namespace", "pod", "container")
          labels:
            cnName: CPU使用率
            unit: "%"
        - record: container:memory_usage_percentage
          expr: (100 * container_memory_working_set_bytes{container!~"|POD",namespace!~"kube-system|default|kube-public"} / (container_spec_memory_limit_bytes > 0)) or (100 * container_memory_working_set_bytes{container!~"|POD",namespace!~"kube-system|default|kube-public"} / ignoring(container, id, image, instance, job, name, namespace, pod) group_left() node_memory_MemTotal_bytes)
          labels:
            cnName: 内存使用率
            unit: "%"
        - record: container:disk_read_operation_rate
          expr: label_join(sum by(cluster, container, namespace, pod, device, node) (irate(container_disk_read_completed_total[5m])) / count by(cluster, container, namespace, pod, device, node) (container_disk_read_completed_total), "target", ".", "namespace", "pod", "container")
          labels:
            cnName: 磁盘读操作速率
            unit: "次/s"
        - record: container:disk_write_operation_rate
          expr: label_join(sum by(cluster, container, namespace, pod, device, node) (irate(container_disk_write_completed_total[5m])) / count by(cluster, container, namespace, pod, device, node) (container_disk_write_completed_total), "target", ".", "namespace", "pod", "container")
          labels:
            cnName: 磁盘写操作速率
            unit: "次/s"
        - record: container:disk_read_bytes_rate
          expr: label_join(sum by(cluster, container, namespace, pod, device, node) (irate(container_disk_read_bytes_total[5m])) / count by(cluster, container, namespace, pod, device, node) (container_disk_read_bytes_total), "target", ".", "namespace", "pod", "container_name")
          labels:
            cnName: 磁盘读字节速率
            unit: "MiB/s"
        - record: container:disk_write_bytes_rate
          expr: label_join(sum by(cluster, container, namespace, pod_name, device, node) (irate(container_disk_write_bytes_total[5m])) / count by(cluster, container, namespace, pod, device, node) (container_disk_write_bytes_total), "target", ".", "namespace", "pod", "container")
          labels:
            cnName: 磁盘写字节速率
            unit: "MiB/s"
        - record: container:gpu_fb_usage_percentage
          expr: 100 * (label_replace(dcgm_fb_used{container_name!=""} / (dcgm_fb_used+dcgm_fb_free),"namespace","$1","pod_namespace","(.*)") or label_replace(dcgm_process_mem_used,"namespace","$1","pod_namespace","(.*)")/ on (cluster,namespace,pod_name,container_name) group_left label_replace(label_replace(kube_pod_container_resource_limits{resource="aliyun_com_gpu_mem"},"pod_name","$1","pod","(.*)"),"container_name","$1","container","(.*)") / 1024)
          labels:
            cnName: GPU显存使用率
            unit: "%"
    - name: workload.rules
      rules:
        - expr: label_join(kube_deployment_status_replicas_available, "target", ".", "namespace", "deployment") or label_join(kube_statefulset_status_replicas_current, "target", ".", "namespace", "statefulset")
          record: workload:current_replicas
          labels:
            cnName: 可用副本数
            unit: 个
    - name: nodepool.rules
      rules:
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node:cpu_request_usage_ratio
          labels:
            cnName: 节点池CPU申请水位
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:cpu_usage_percentage
          labels:
            cnName: 节点池CPU使用率
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:memory_usage_percentage
          labels:
            cnName: 节点池内存使用率
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:memory_request_ratio
          labels:
            cnName: 节点池内存申请水位
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:gpu_request_ratio
          labels:
            cnName: 节点池GPU申请水位
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:gpu_utilization
          labels:
            cnName: 节点池GPU利用率
            unit: '%'
        - expr: 100 - avg by (cluster,cluster_name, node_name, node)(irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
          record: node_pool:gpu_mem_usage_percentage
          labels:
            cnName: 节点池GPU显存使用率
            unit: '%'
    - name: ingress.rules
      rules:
        - expr: sum by(cluster) (irate(nginx_ingress_controller_requests[2m]))
          record: ingress_cluster:all_controller_request_volume
          labels:
            cnName: 请求量
            unit: 次
        - expr: sum by(cluster) (nginx_ingress_controller_nginx_process_connections)
          record: ingress_cluster:all_controller_connections
          labels:
            cnName: 连接数
            unit: 个
        - expr: 100 * sum by(cluster) (irate(nginx_ingress_controller_requests{status!~"[4-5].*"}[5m])) / sum by(cluster) (irate(nginx_ingress_controller_requests[5m])) >= 0 or sum by(cluster) (irate(nginx_ingress_controller_requests[5m])) == 0
          record: ingress_cluster:all_controller_success_percentage
          labels:
            cnName: 成功率
            unit: '%'
        - expr: sum by(cluster) (irate(nginx_ingress_controller_response_size_sum[5m]))
          record: ingress_cluster:all_controller_send_rate
          labels:
            cnName: 网络发送速率
            unit: MiB/s
        - expr: sum by(cluster) (irate(nginx_ingress_controller_request_size_sum[5m]))
          record: ingress_cluster:all_controller_received_rate
          labels:
            cnName: 网络接收速率
            unit: MiB/s
        - expr: sum by(cluster) (irate(nginx_ingress_controller_nginx_process_cpu_seconds_total[5m])) * 100
          record: ingress_cluster:all_controller_cpu_usage_percentage
          labels:
            cnName: CPU使用率
            unit: '%'
        - expr: avg by(cluster) (nginx_ingress_controller_nginx_process_resident_memory_bytes)
          record: ingress_cluster:all_controller_memory_usage_bytes
          labels:
            cnName: 内存使用量
            unit: MiB
    - name: ceph_cluster.rules
      rules:
      - expr: 100 * (ceph_cluster_total_used_bytes / ceph_cluster_total_bytes)
        record: ceph_cluster:cluster_used_percentage
        labels:
          cnName: 集群总水位
          unit: '%'
      - expr: avg by(cluster, cluster_name, name, pool_id) ((ceph_pool_metadata / ceph_pool_metadata) * on(cluster, pool_id, instance) group_left(job) (ceph_pool_bytes_used / (ceph_pool_bytes_used + ceph_pool_max_avail)))
        record: ceph_cluster:pool_used_percentage
        labels:
          cnName: 逻辑池水位
          unit: '%'
      - expr: (1 + ceph_health_status == 1) or ceph_cluster:cluster_unhealth_status
        record: ceph_cluster:cluster_health_status
        labels:
          cnName: 集群状态异常
          unit: '%'
    - name: node.rules
      rules:
      - expr: 100 - avg by(cluster, cluster_name, node_name, node) (irate(node_cpu_seconds_total{mode="idle"}[2m]) * 100)
        record: node:cpu_usage_percentage
        labels:
          cnName: CPU 使用率
          unit: '%'
      - expr: 100 * (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / on(cluster, node_name, cluster_name) label_replace(kube_node_status_capacity_memory_bytes, "node_name", "$1", "node", "(.*)")
        record: node:memory_usage_percentage
        labels:
          cnName: 内存使用率
          unit: '%'
      - expr: label_replace(100 - 100 * (sum by(cluster, cluster_name, node_name, device) (node_filesystem_free_bytes / node_filesystem_size_bytes) / count by(cluster, cluster_name, node_name, device) (node_filesystem_free_bytes / node_filesystem_size_bytes)), "device", "$2", "device", "(.*)/(.*)$")
        record: node:disk_usage_percentage
        labels:
          cnName: 文件系统使用率
          unit: '%'
      - expr: label_replace(node_load15, "type", "load15", "(.*)", "(.*)") or label_replace(node_load5, "type", "load5", "(.*)", "(.*)") or label_replace(node_load1, "type", "load1", "(.*)", "(.*)")
        record: node:system_load
        labels:
          cnName: LOAD 数
      - expr: node_tcp_connection_states
        record: node:tcp_connection_nums
        labels:
          cnName: TCP 连接数
      - expr: irate(node_network_receive_bytes_total[2m])
        record: node:network_receive_bytes_rate
        labels:
          cnName: 网络收字节数速率
          unit: MB/s
      - expr: irate(node_network_transmit_bytes_total[2m])
        record: node:network_transmit_bytes_rate
        labels:
          cnName: 网络发字节数速率
          unit: MB/s
      - expr: label_replace(kube_node_status_condition{condition="Ready",status="true"} == 0, "node_name", "$1", "node", "(.*)")
        record: node:unhealthy_node
        labels:
          cnName: 节点状态异常
      - expr: avg by(cluster_name, cluster, node_name) (label_replace(dcgm_gpu_utilization, "device", "$1", "gpu", "(.*)"))
        record: node:gpu_total_used_percentage
        labels:
          cnName: GPU利用率
          unit: '%'
      - expr: avg by(cluster, cluster_name, node_name) (container:gpu_fb_usage_percentage)
        record: node:gpu_fb_usage_percentage
        labels:
          cnName: GPU显存使用率
          unit: '%'
    - name: cluster.rules
      rules:
      - expr: (kube_apiserver_status or kube_scheduler_status or kube_controller_manager_status or kube_etcd_status) == 0 or kube_pod_container_status_running{namespace="kube-system",pod=~".*kube-apiserver.*"} == 1
        record: cluster:unhealth_component
        labels:
          cnName: 组件状态非健康时
    - name: storage.rules
      rules:
        - expr: label_join((avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (kubelet_volume_stats_used_bytes / kubelet_volume_stats_capacity_bytes * 100) or avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (kube_persistentvolumeclaim_info * on(cluster, cluster_name, volumename) group_left() avg by(cluster, cluster_name, volumename) (label_replace(100 * pv_used / pv_size, "volumename", "$1", "pvcname", "(.*)")))), "target", ".", "namespace", "persistentvolumeclaim")
          record: storage:persistentvolumecalim_used_percentage
          labels:
            cnName: 水位
            unit: "%"
    - name: storagecephfs.rules
      rules:
        - expr: label_join((avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (kubelet_volume_stats_used_bytes / kubelet_volume_stats_capacity_bytes * 100) or avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (kube_persistentvolumeclaim_info * on(cluster, cluster_name, volumename) group_left() avg by(cluster, cluster_name, volumename) (label_replace(100 * pv_used / pv_size, "volumename", "$1", "pvcname", "(.*)")))), "target", ".", "namespace", "persistentvolumeclaim")
          record: storage:persistentvolumecalim_used_percentage
          labels:
            cnName: 水位
            unit: "%"
        - record: storage:persistentvolumecalim_read_operation_rate
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(irate(rlat_count[2m]), "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 读操作速率
            unit: "次/s"
        - record: storage:persistentvolumecalim_write_operation_rate
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(irate(wrlat_count[2m]), "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 写操作速率
            unit: "次/s"
        - record: storage:persistentvolumecalim_read_bytes_rate
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(irate(r_bytes[2m]), "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 读字节速率
            unit: "B/s"
        - record: storage:persistentvolumecalim_write_bytes_rate
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(irate(w_bytes[2m]), "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 写字节速率
            unit: "B/s"
        - record: storage:persistentvolumecalim_write_lantency
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(wrlat_lat, "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 写操作延时
            unit: "ms"
        - record: storage:persistentvolumecalim_read_lantency
          expr: label_join(avg by(cluster, cluster_name, namespace, persistentvolumeclaim) (label_replace(kube_persistentvolumeclaim_info, "persistentvolume", "$1", "volumename", "(.*)") * on(cluster, cluster_name, persistentvolume) group_left(volumename) label_replace(rlat_lat, "persistentvolume", "$1", "pvcname", "(.*)")), "target", ".", "namespace", "persistentvolumeclaim")
          labels:
            cnName: 读操作延时
            unit: "ms"